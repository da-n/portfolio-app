// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/da-n/portfolio-app/domain (interfaces: CustomerRepository)

// Package domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	errs "github.com/da-n/portfolio-app/errs"
	gomock "github.com/golang/mock/gomock"
)

// MockCustomerRepository is a mock of CustomerRepository interface.
type MockCustomerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCustomerRepositoryMockRecorder
}

// MockCustomerRepositoryMockRecorder is the mock recorder for MockCustomerRepository.
type MockCustomerRepositoryMockRecorder struct {
	mock *MockCustomerRepository
}

// NewMockCustomerRepository creates a new mock instance.
func NewMockCustomerRepository(ctrl *gomock.Controller) *MockCustomerRepository {
	mock := &MockCustomerRepository{ctrl: ctrl}
	mock.recorder = &MockCustomerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomerRepository) EXPECT() *MockCustomerRepositoryMockRecorder {
	return m.recorder
}

// FindByCustomerId mocks base method.
func (m *MockCustomerRepository) FindByCustomerId(arg0 int) (*Customer, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByCustomerId", arg0)
	ret0, _ := ret[0].(*Customer)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// FindByCustomerId indicates an expected call of FindByCustomerId.
func (mr *MockCustomerRepositoryMockRecorder) FindByCustomerId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByCustomerId", reflect.TypeOf((*MockCustomerRepository)(nil).FindByCustomerId), arg0)
}
